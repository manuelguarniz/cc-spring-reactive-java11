# HTTP variables
@baseUrl = http://localhost:8080
@contentType = application/json

### Health check
GET {{baseUrl}}/api/health

### List all students
GET {{baseUrl}}/api/students

### response example
# HTTP/1.1 200 OK
# transfer-encoding: chunked
# content-type: application/json
# connection: close

# [
#   {
#     "id": "8c1f58c9-c9d9-418b-a8b1-b91522ca81a9",
#     "name": "Manuel",
#     "lastName": "Guarniz",
#     "age": 30,
#     "status": "ACTIVE"
#   }
# ]

### Create a new student
POST {{baseUrl}}/api/students
Content-Type: {{contentType}}

{
    "name": "Esteban",
    "lastName": "Cruz",
    "age": 29,
    "status": "ACTIVE"
}

### exception response example
#{
#  "message": "executeMany; bad SQL grammar [INSERT INTO student (name, last_name, age, status) VALUES ($1, $2, $3, $4)]; nested exception is io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: [42804] column \"age\" is of type smallint but expression is of type character varying"
#}

### successfully created student
#HTTP/1.1 201 Created
#content-length: 0
#
#<Response body is empty>

### Create an invalid new student
POST {{baseUrl}}/api/students
Content-Type: {{contentType}}

{
    "name": "",
    "lastName": "Cruz",
    "age": 29,
    "status": "ACTIVE"
}

### exception response example
#HTTP/1.1 400 Bad Request
#{
#  "error": "Validation Error",
#  "message": "Los datos proporcionados no son v√°lidos",
#  "errors": {
#    "name": "El nombre solo puede contener letras y espacios"
#  },
#  "timestamp": "2025-06-21T11:22:31.908152",
#  "status": 400
#}


### Create a new student with custom id
POST {{baseUrl}}/api/students
Content-Type: {{contentType}}

{
    "id": "d192cc90-0623-446a-8c73-07624dbedaac",
    "name": "Jorgito",
    "lastName": "Luna",
    "age": 28,
    "status": "ACTIVE"
}

### success response with custom id
#HTTP/1.1 201 Created
#{
#  "id": "d192cc90-0623-446a-8c73-07624dbedaac",
#  "name": "Jorgito",
#  "lastName": "Luna",
#  "age": 28,
#  "status": "ACTIVE"
#}

### Create an exists new student
POST {{baseUrl}}/api/students
Content-Type: {{contentType}}

{
    "id": "d192cc90-0623-446a-8c73-07624dbedaac",
    "name": "Mario",
    "lastName": "Vargas",
    "age": 27,
    "status": "ACTIVE"
}

### exception response example
#HTTP/1.1 409 Conflict
#{
#  "timestamp": "2025-06-23T00:01:51.421429",
#  "status": 409,
#  "error": "Business Validation Error",
#  "message": "No se puede crear un estudiante con el ID 'd192cc90-0623-446a-8c73-07624dbedaac' porque ya existe",
#  "errors": null
#}

### Create an exists new student
POST {{baseUrl}}/api/students
Content-Type: {{contentType}}

{
    "id": "07624dbedavv",
    "name": "Loco",
    "lastName": "Vargas",
    "age": 26,
    "status": "ACTIVE"
}